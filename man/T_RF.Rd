% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TRF.R
\name{T_RF}
\alias{T_RF}
\title{T-Learner with honest RF for both response functions}
\usage{
T_RF(feat, tr, yobs, nthread = 0, verbose = TRUE,
  mu0.forestry = list(relevant.Variable = 1:ncol(feat), ntree = 1000,
  replace = TRUE, sample.fraction = 0.9, mtry = ncol(feat), nodesizeSpl =
  1, nodesizeAvg = 3, splitratio = 0.5, middleSplit = FALSE),
  mu1.forestry = list(relevant.Variable = 1:ncol(feat), ntree = 1000,
  replace = TRUE, sample.fraction = 0.9, mtry = ncol(feat), nodesizeSpl =
  1, nodesizeAvg = 3, splitratio = 0.5, middleSplit = FALSE))
}
\arguments{
\item{feat}{A data frame containing the features.}

\item{tr}{A numeric vector with 0 for control and 1 for treated variables.}

\item{yobs}{A numeric vector containing the observed outcomes.}

\item{nthread}{Number of threads which should be used to work in parallel.}

\item{verbose}{TRUE for detailed output FALSE for no output:}

\item{mu0.forestry, mu1.forestry}{Lists containing the hyperparameters for the
\code{forestry} package that are used in \eqn{\hat \mu_0} and \eqn{\hat
\mu_1}, respectively. These hyperparameters are passed to the
\code{forestry} package. Please refer to the
\href{https://github.com/soerenkuenzel/forestry}{\code{forestry}} package
for a more detailed documentation of the hyperparamters.}
}
\value{
Object of class \code{T_RF}. It should be used with one of the 
  following functions \code{EstimateCATE}, \code{CateCI}, \code{CateBIAS}, 
  and \code{EstimateAllSampleStatistics}. The object has the following slots:
  \item{\code{feature_train}}{A copy of feat.}
  \item{\code{tr_train}}{A copy of tr.}
  \item{\code{yobs_train}}{A copy of yobs.}
  \item{\code{m_0}}{An object of class forestry that is fitted with the 
     observed outcomes of the control group as the dependent variable.}
  \item{\code{m_1}}{An object of class forestry that is fitted with the 
     observed outcomes of the treated group as the dependent variable.}
  \item{\code{hyperparameter_list}}{List containting the hyperparameters of 
     the three random forest algorithms used}
  \item{\code{creator}}{Function call of T_RF. This is used for different 
     bootstrap procedures.}
}
\description{
This is an implementation of the T-learner combined with honest
  random forest for both response functions
}
\details{
The T-Learner with random forest 
\enumerate{
 \item
    Estimate the response functions 
    \deqn{\mu_0(x) = E[Y(0) | X = x]}
    \deqn{\mu_1(x) = E[Y(1) | X = x]} 
    using the
    \href{https://github.com/soerenkuenzel/forestry}{\code{forestry}} random
    forest version with the hyperparameters specified in \code{mu0.forestry}
    and \code{mu1.forestry} and denote the estimates as \eqn{\hat \mu_0} and
    \eqn{\hat \mu_1}.
 \item 
    Define the CATE estimate as
    \deqn{\tau(x) = \hat \mu_1 - \hat \mu_0.}
}
}
\examples{
require(causalToolbox)

# create example data set
simulated_experiment <- simulate_causal_experiment(
  ntrain = 1000,
  ntest = 1000,
  dim = 10,
  setup = "complexTau",
  testseed = 293901,
  trainseed = 307017
)
feat <- simulated_experiment$feat_tr
tr <- simulated_experiment$W_tr
yobs <- simulated_experiment$Yobs_tr

# create the hte object using honest Random Forests (RF)
xl_rf <- X_RF(feat = feat, tr = tr, yobs = yobs)
tl_rf <- T_RF(feat = feat, tr = tr, yobs = yobs)
sl_rf <- S_RF(feat = feat, tr = tr, yobs = yobs)

cate_esti_rf <- EstimateCate(xl_rf, feature_test)

# evaluate the performance
cate_true <- simulated_experiment$tau_te
mean((cate_esti_rf - cate_true) ^ 2)
\dontrun{
# Create confidence intervals via bootstrapping. 
xl_ci_rf <- CateCI(xl_rf, feature_test, B = 500)
}
}
\references{
\itemize{
  \item Sören Künzel, Jasjeet Sekhon, Peter Bickel, and Bin Yu (2017). 
    Meta-learners for estimating heterogeneous treatment effects using
    machine learning. 
    \url{https://arxiv.org/pdf/1706.03461.pdf}
  \item 
    Sören Künzel, Simon Walter, and Jasjeet Sekhon (2018).
    Causaltoolbox---Estimator Stability for Heterogeneous Treatment Effects.
    \url{https://arxiv.org/pdf/1811.02833.pdf}
  \item Sören Künzel, Bradly Stadie, Nikita Vemuri, Varsha Ramakrishnan, 
    Jasjeet Sekhon, and Pieter Abbeel (2018). 
    Transfer learning for estimating causal effects using neural networks. 
    \url{https://arxiv.org/pdf/1808.07804.pdf}
  }
}
\seealso{
Other metalearners: \code{\link{S_BART}},
  \code{\link{S_RF}}, \code{\link{X_RF}}
}
\concept{metalearners}
