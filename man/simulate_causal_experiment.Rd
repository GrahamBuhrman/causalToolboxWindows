% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ExmpleSetups_causaleffects.R
\name{simulate_causal_experiment}
\alias{simulate_causal_experiment}
\title{Simulate a Causal Experiment}
\usage{
simulate_causal_experiment(ntrain = nrow(given_features),
  ntest = nrow(given_features), dim = ncol(given_features),
  alpha = 0.1, feat_distribution = "normal", given_features = NULL,
  pscore = "rct5", mu0 = "sparseLinearStrong",
  tau = "sparseLinearWeak", testseed = NULL, trainseed = NULL)
}
\arguments{
\item{ntrain}{Number of training examples.}

\item{ntest}{Number of test examples.}

\item{dim}{Dimension of the data set.}

\item{alpha}{Only used if given_features is not set and feat_distribution is
chosen to be normal. It specifies how correlated the features can be. If
alpha = 0, then the features are independent if alpha is very large, then
the features can be very correlated. Use the
\code{simulate_correlation_matrix} function to get a better understanding
of the impact of alpha.}

\item{feat_distribution}{Only used if given_features is not specified. Either
"normal" or "unif". It specifies the distribution of the features.}

\item{given_features}{This is used, if we already have features and want to
test the performance of different estimators for a particular set of
features.}

\item{pscore, mu0, tau}{parameters that determine the propensity score, the
response function for the control units, and tau, respectively. The
different options can be seen using
\code{names(pscores.simulate_causal_experiment)},
\code{names(mu0.simulate_causal_experiment)}, and
\code{names(tau.simulate_causal_experiment)}. This is implemented this way,
because it enables the user to easily loop through the different
estimators.}

\item{testseed}{The seed used to generate the testing data, if NULL, then
the seed of the main session is used.}

\item{trainseed}{The seed used to generate the training data, if NULL,
then the seed of the main session is used.}
}
\value{
A list with the following elements 
  \item{\code{setup_name}}{Name of the setup} 
  \item{\code{m_t_truth}}{Function contraining the response function of the
  treated units.}
  \item{\code{m_c_truth}}{Function contraining the response function of the
  control units}
  \item{\code{propscore}}{Propensity score function} 
  \item{\code{alpha}}{Chosen alpha} 
  \item{\code{feat_te}}{Data.frame containing the features of the test
  samples}
  \item{\code{W_te}}{Numeric vector containing the treatment assignment of
  the test samples}
  \item{\code{tau_te}}{Numeric vector containing the true conditional average
  treatment effects of the test samples}
  \item{\code{Yobs_te}}{Numeric vector containing the observed Y values of
  the test samples}
  \item{\code{feat_tr}}{Data.frame containing the features of the training 
  samples}
  \item{\code{W_tr}}{Numeric vector containing the treatment assignment of
  the training samples}
  \item{\code{tau_tr}}{Numeric vector containing the true conditional average
  treatment effects of the training samples}
  \item{\code{Yobs_tr}}{Numeric vector containing the observed Y values of
  the training samples}
}
\description{
This function simulates a RCT or observational data for causal
  effect estimation. It is mainly used to test different heterogenuous
  treatment effect estimation strategies.
}
\details{
The function simulates causal experiments by generating the
  features, the treatment assignment, the observed Y values, and the CATE for
  a test set and a training set. pscore, mu0, and tau define the response
  functions and the propensity score. For example, \code{pscore =
  "osSparse1Linear"} specifies that \deqn{e(x) = max(0.05, min(.95, x1 / 2 +
  1 / 4))} and \code{mu0 ="sparseLinearWeak"} specifies that the response
  function for the control units is given by a simple linear function,
  \deqn{mu0(x) = 3 x1 + 5 x2.}
}
\examples{
require(causalToolbox)

ce_sim <- simulate_causal_experiment(
  ntrain = 20,
  ntest = 20,
  dim = 7
)

ce_sim

\dontrun{
estimators <- list(
S_RF = S_RF, 
T_RF = T_RF, 
X_RF = X_RF, 
S_BART = S_BART,
T_BART = T_BART, 
X_BARTT = X_BART)

performance <- data.frame()
for(tau_n in names(tau.simulate_causal_experiment)){
  for(mu0_n in names(mu0.simulate_causal_experiment)) {
    ce <- simulate_causal_experiment(
      given_features = iris,
      pscore = "rct5",
      mu0 = mu0_n,
      tau = tau_n)
    
    for(estimator_n in names(estimators)) {
      print(paste(tau_n, mu0_n, estimator_n))
    
      trained_e <- estimators[[estimator_n]](ce$feat_tr, ce$W_tr, ce$Yobs_tr)
      performance <- 
        rbind(performance, 
              data.frame(
                mu0 = mu0_n,
                tau = tau_n,
                estimator = estimator_n,
                MSE = mean((EstimateCate(trained_e, ce$feat_te) - 
                            ce$tau_te)^2)))
    }
  }
}

reshape2::dcast(data = performance, mu0 + tau ~ estimator)
}
}
\references{
\itemize{
  \item Daniel Lewandowskia, Dorota Kurowickaa, Harry Joe (2009). Generating
  random correlation matrices based on vines and extended onion method.
  \item Sören Künzel, Jasjeet Sekhon, Peter Bickel, and Bin Yu (2017). 
    Meta-learners for estimating heterogeneous treatment effects using
    machine learning.
    }
}
\seealso{
\code{\link{X_RF}}
}
