% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CATE_estimators.R, R/SBART.R, R/XBART.R,
%   R/TBART.R, R/MBART.R
\name{CateCI}
\alias{CateCI}
\alias{CateCI,CATEestimator-method}
\alias{CateCI,S_BART-method}
\alias{CateCI,X_BART-method}
\alias{CateCI,T_BART-method}
\alias{CateCI,M_BART-method}
\title{Method CateCI}
\usage{
CateCI(
  theObject,
  feature_new,
  method = "maintain_group_ratios",
  bootstrapVersion = "normalApprox",
  B = 2000,
  nthread = 0,
  verbose = TRUE
)

\S4method{CateCI}{CATEestimator}(
  theObject,
  feature_new,
  method = "maintain_group_ratios",
  bootstrapVersion = "normalApprox",
  B = 2000,
  nthread = 0,
  verbose = TRUE
)

\S4method{CateCI}{S_BART}(theObject, feature_new, verbose = FALSE)

\S4method{CateCI}{X_BART}(theObject, feature_new, verbose = FALSE)

\S4method{CateCI}{T_BART}(theObject, feature_new, verbose = FALSE)

\S4method{CateCI}{M_BART}(theObject, feature_new, verbose = FALSE)
}
\arguments{
\item{theObject}{A `MetaLearner` object.}

\item{feature_new}{A feature data frame.}

\item{method}{Different versions of the bootstrap.}

\item{bootstrapVersion}{Default is normalApprox, which will use the 
bootstrap normal approximation to get CI. Smoothed will use CI around the
smoothed bootstrap as introduced by Efron 2014.}

\item{B}{Number of bootstrap samples.}

\item{nthread}{Number of threads to be used in parallel.}

\item{verbose}{TRUE for detailed output, FALSE for no output.}
}
\value{
A data frame of estimated CATE confidence intervals.
}
\description{
Returns the estimated confidence intervals for the CATE.
}
\examples{
\dontrun{
require(causalToolbox)

# create example data set
simulated_experiment <- simulate_causal_experiment(
  ntrain = 1000,
  ntest = 1000,
  dim = 10
)
feat <- simulated_experiment$feat_tr
tr <- simulated_experiment$W_tr
yobs <- simulated_experiment$Yobs_tr
feature_test <- simulated_experiment$feat_te

# create the CATE estimator using Random Forests (RF)
xl_rf <- X_RF(feat = feat, tr = tr, yobs = yobs)
CateCI(xl_rf, feature_test, B = 500)
}
}
